datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  Account       Account[]
  Session       Session[]
  tags          PermissionTag[]

  Workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId String?
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model verificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@unique([identifier, token])
}

model PermissionTag {
  id   String @id @default(cuid())
  name String

  User      User?      @relation(fields: [userId], references: [id])
  userId    String?
  Block     Block?     @relation(fields: [blockId], references: [id])
  blockId   String?
  Page      Page?      @relation(fields: [pageId], references: [id])
  pageId    String?
  Workspace Workspace?
}

model Workspace {
  id    String @id @default(cuid())
  user  User[]
  pages Page[]

  permissionTag   PermissionTag @relation(fields: [permissionTagId], references: [id])
  permissionTagId String        @unique
}

model Page {
  id String @id @default(cuid())

  subpages Page[]  @relation("PagesRelation")
  parentId String?
  parent   Page?   @relation("PagesRelation", fields: [parentId], references: [id])

  blocks      Block[]
  permissions PermissionTag[]

  Workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId String?
}

model Block {
  id   String @id @default(cuid())
  type String

  blocksRelation Block[] @relation("BlocksRelation")
  blocks         Block[] @relation("BlocksRelation")

  permissions PermissionTag[]
  properties  Json


  Page   Page?   @relation(fields: [pageId], references: [id])
  pageId String?

  version   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
